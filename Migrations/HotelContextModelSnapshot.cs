// <auto-generated />
using System;
using HotelWebAPI.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelWebAPI.Migrations
{
    [DbContext(typeof(HotelContext))]
    partial class HotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelWebAPI.Model.AdaptacaoQuarto", b =>
                {
                    b.Property<int>("CodAdaptacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codAdaptacao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAdaptacao"));

                    b.Property<string>("TipoAdaptacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoAdaptacao");

                    b.HasKey("CodAdaptacao")
                        .HasName("Pk_codAdaptacao");

                    b.ToTable("AdaptacaoQuarto", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endereco");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nacionalidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("telefone");

                    b.HasKey("IdCliente")
                        .HasName("Pk_idCliente");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.Contum", b =>
                {
                    b.Property<int>("CodConta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codConta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodConta"));

                    b.Property<int>("IdNotaConta")
                        .HasColumnType("int")
                        .HasColumnName("idNotaConta");

                    b.HasKey("CodConta")
                        .HasName("Pk_codConta");

                    b.HasIndex("IdNotaConta");

                    b.ToTable("Conta");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Filial", b =>
                {
                    b.Property<int>("IdFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFilial");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFilial"));

                    b.Property<string>("EnderecoFilial")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("enderecoFilial");

                    b.Property<int?>("Estrelas")
                        .HasColumnType("int")
                        .HasColumnName("estrelas");

                    b.Property<string>("NomeFilial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nomeFilial");

                    b.Property<int?>("QuartosCasal")
                        .HasColumnType("int")
                        .HasColumnName("quartosCasal");

                    b.Property<int?>("QuartosFamilia")
                        .HasColumnType("int")
                        .HasColumnName("quartosFamilia");

                    b.Property<int?>("QuartosPresidencial")
                        .HasColumnType("int")
                        .HasColumnName("quartosPresidencial");

                    b.Property<int?>("QuartosSolteiro")
                        .HasColumnType("int")
                        .HasColumnName("quartosSolteiro");

                    b.HasKey("IdFilial")
                        .HasName("Pk_idFilial");

                    b.ToTable("Filial", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.FormaPagamento", b =>
                {
                    b.Property<int>("CodTipoPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codTipoPagamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTipoPagamento"));

                    b.Property<string>("TipoPagamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipoPagamento");

                    b.HasKey("CodTipoPagamento")
                        .HasName("Pk_codTipoPagamento");

                    b.ToTable("FormaPagamento", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.Funcao", b =>
                {
                    b.Property<int>("CodFuncao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codFuncao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodFuncao"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("Funcao1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("funcao");

                    b.HasKey("CodFuncao")
                        .HasName("Pk_codFuncao");

                    b.ToTable("Funcao", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFuncionario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFuncionario"));

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("dataNascimento");

                    b.Property<string>("Endereco")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("endereco");

                    b.Property<int?>("IdFilialFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("idFilialFuncionario");

                    b.Property<int>("IdFuncao")
                        .HasColumnType("int")
                        .HasColumnName("idFuncao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("telefone");

                    b.HasKey("IdFuncionario")
                        .HasName("Pk_idFuncionario");

                    b.HasIndex("IdFilialFuncionario");

                    b.HasIndex("IdFuncao");

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.ItemConsumivelFilial", b =>
                {
                    b.Property<int>("CodItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codItem");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodItem"));

                    b.Property<int?>("IdFilialItem")
                        .HasColumnType("int")
                        .HasColumnName("idFilialItem");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valorUnitario");

                    b.HasKey("CodItem")
                        .HasName("Pk_codItem");

                    b.HasIndex("IdFilialItem");

                    b.ToTable("ItemConsumivelFilial", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.ItemContum", b =>
                {
                    b.Property<int>("CodItem")
                        .HasColumnType("int")
                        .HasColumnName("codItem");

                    b.Property<int>("CodConta")
                        .HasColumnType("int")
                        .HasColumnName("codConta");

                    b.Property<decimal>("AcrescimoEntrega")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("acrescimoEntrega");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("item");

                    b.Property<string>("Origem")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("origem");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor");

                    b.HasKey("CodItem", "CodConta")
                        .HasName("Pk_ItemConta");

                    b.HasIndex("CodConta");

                    b.ToTable("ItemConta");
                });

            modelBuilder.Entity("HotelWebAPI.Model.ItemLavanderiaContum", b =>
                {
                    b.Property<int>("CodItemLavanderia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codItemLavanderia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodItemLavanderia"));

                    b.Property<int?>("CodConta")
                        .HasColumnType("int")
                        .HasColumnName("codConta");

                    b.Property<int?>("IdServicoLavanderia")
                        .HasColumnType("int")
                        .HasColumnName("idServicoLavanderia");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<string>("Servico")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("servico");

                    b.HasKey("CodItemLavanderia")
                        .HasName("Pk_ItemLavanderiaConta");

                    b.HasIndex("CodConta");

                    b.HasIndex("IdServicoLavanderia");

                    b.ToTable("ItemLavanderiaConta");
                });

            modelBuilder.Entity("HotelWebAPI.Model.NotaFiscal", b =>
                {
                    b.Property<int>("NumNota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("numNota");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumNota"));

                    b.Property<int?>("CodTipoPagamento")
                        .HasColumnType("int")
                        .HasColumnName("codTipoPagamento");

                    b.Property<decimal?>("ValorTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("valorTotal");

                    b.HasKey("NumNota")
                        .HasName("Pk_numNota");

                    b.HasIndex("CodTipoPagamento");

                    b.ToTable("NotaFiscal", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.Quarto", b =>
                {
                    b.Property<int>("NumQuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("numQuarto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumQuarto"));

                    b.Property<int?>("IdAdaptacao")
                        .HasColumnType("int")
                        .HasColumnName("idAdaptacao");

                    b.Property<int?>("IdFilialQuarto")
                        .HasColumnType("int")
                        .HasColumnName("idFilialQuarto");

                    b.Property<int>("IdTipoQuarto")
                        .HasColumnType("int")
                        .HasColumnName("idTipoQuarto");

                    b.HasKey("NumQuarto")
                        .HasName("Pk_numQuarto");

                    b.HasIndex("IdAdaptacao");

                    b.HasIndex("IdFilialQuarto");

                    b.HasIndex("IdTipoQuarto");

                    b.ToTable("Quarto", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idReserva");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<bool?>("AdicionarColchao")
                        .HasColumnType("bit")
                        .HasColumnName("adicionarColchao");

                    b.Property<int>("IdClienteReserva")
                        .HasColumnType("int")
                        .HasColumnName("idClienteReserva");

                    b.Property<int>("IdFuncionarioReserva")
                        .HasColumnType("int")
                        .HasColumnName("idFuncionarioReserva");

                    b.HasKey("IdReserva")
                        .HasName("Pk_idReserva");

                    b.HasIndex("IdClienteReserva");

                    b.HasIndex("IdFuncionarioReserva");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.ReservaQuarto", b =>
                {
                    b.Property<int>("IdReservaQuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idReservaQuarto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservaQuarto"));

                    b.Property<bool?>("Cancelada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("cancelada");

                    b.Property<DateOnly>("DataCheckIn")
                        .HasColumnType("date")
                        .HasColumnName("dataCheckIn");

                    b.Property<DateOnly>("DataCheckOut")
                        .HasColumnType("date")
                        .HasColumnName("dataCheckOut");

                    b.Property<int?>("IdQuarto")
                        .HasColumnType("int")
                        .HasColumnName("idQuarto");

                    b.Property<int?>("IdReserva")
                        .HasColumnType("int")
                        .HasColumnName("idReserva");

                    b.HasKey("IdReservaQuarto")
                        .HasName("Pk_idReservaQuarto");

                    b.HasIndex("IdReserva");

                    b.ToTable("ReservaQuarto", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.ServicoLavanderium", b =>
                {
                    b.Property<int>("IdServicoLavanderia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idServicoLavanderia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicoLavanderia"));

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomeServico");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("preco");

                    b.HasKey("IdServicoLavanderia")
                        .HasName("Pk_idServicoLavanderia");

                    b.ToTable("ServicoLavanderia");
                });

            modelBuilder.Entity("HotelWebAPI.Model.TipoQuarto", b =>
                {
                    b.Property<int>("CodTipoQuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codTipoQuarto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTipoQuarto"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int")
                        .HasColumnName("capacidadeMaxima");

                    b.Property<int>("CapacidadeOpcional")
                        .HasColumnType("int")
                        .HasColumnName("capacidadeOpcional");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("TipoQuarto1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipoQuarto");

                    b.HasKey("CodTipoQuarto")
                        .HasName("Pk_codTipoQuarto");

                    b.ToTable("TipoQuarto", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.ValorQuartoFilial", b =>
                {
                    b.Property<int>("IdValorQuartoFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idValorQuartoFilial");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdValorQuartoFilial"));

                    b.Property<int?>("CodTipoQuarto")
                        .HasColumnType("int")
                        .HasColumnName("codTipoQuarto");

                    b.Property<decimal?>("DiariaQuartoFilial")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("diariaQuartoFilial");

                    b.Property<int?>("IdFilial")
                        .HasColumnType("int")
                        .HasColumnName("idFilial");

                    b.HasKey("IdValorQuartoFilial")
                        .HasName("Pk_idValorQuartoFilial");

                    b.HasIndex("CodTipoQuarto");

                    b.HasIndex("IdFilial");

                    b.ToTable("ValorQuartoFilial", (string)null);
                });

            modelBuilder.Entity("HotelWebAPI.Model.Contum", b =>
                {
                    b.HasOne("HotelWebAPI.Model.NotaFiscal", "IdNotaContaNavigation")
                        .WithMany("Conta")
                        .HasForeignKey("IdNotaConta")
                        .IsRequired()
                        .HasConstraintName("Fk_numNota");

                    b.Navigation("IdNotaContaNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Funcionario", b =>
                {
                    b.HasOne("HotelWebAPI.Model.Filial", "IdFilialFuncionarioNavigation")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdFilialFuncionario")
                        .HasConstraintName("Fk_idFilialFuncionario");

                    b.HasOne("HotelWebAPI.Model.Funcao", "IdFuncaoNavigation")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdFuncao")
                        .IsRequired()
                        .HasConstraintName("Fk_idFuncao");

                    b.Navigation("IdFilialFuncionarioNavigation");

                    b.Navigation("IdFuncaoNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.ItemConsumivelFilial", b =>
                {
                    b.HasOne("HotelWebAPI.Model.Filial", "IdFilialItemNavigation")
                        .WithMany("ItemConsumivelFilials")
                        .HasForeignKey("IdFilialItem")
                        .HasConstraintName("Fk_idFilialItem");

                    b.Navigation("IdFilialItemNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.ItemContum", b =>
                {
                    b.HasOne("HotelWebAPI.Model.Contum", "CodContaNavigation")
                        .WithMany("ItemConta")
                        .HasForeignKey("CodConta")
                        .IsRequired()
                        .HasConstraintName("Fk_codConta");

                    b.HasOne("HotelWebAPI.Model.ItemConsumivelFilial", "CodItemNavigation")
                        .WithMany("ItemConta")
                        .HasForeignKey("CodItem")
                        .IsRequired()
                        .HasConstraintName("Fk_codItem");

                    b.Navigation("CodContaNavigation");

                    b.Navigation("CodItemNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.ItemLavanderiaContum", b =>
                {
                    b.HasOne("HotelWebAPI.Model.Contum", "CodContaNavigation")
                        .WithMany("ItemLavanderiaConta")
                        .HasForeignKey("CodConta")
                        .HasConstraintName("Fk_codContaLavanderia");

                    b.HasOne("HotelWebAPI.Model.ServicoLavanderium", "IdServicoLavanderiaNavigation")
                        .WithMany("ItemLavanderiaConta")
                        .HasForeignKey("IdServicoLavanderia")
                        .HasConstraintName("Fk_idServicoLavanderia");

                    b.Navigation("CodContaNavigation");

                    b.Navigation("IdServicoLavanderiaNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.NotaFiscal", b =>
                {
                    b.HasOne("HotelWebAPI.Model.FormaPagamento", "CodTipoPagamentoNavigation")
                        .WithMany("NotaFiscals")
                        .HasForeignKey("CodTipoPagamento")
                        .HasConstraintName("Fk_idFormaPagamento");

                    b.Navigation("CodTipoPagamentoNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Quarto", b =>
                {
                    b.HasOne("HotelWebAPI.Model.AdaptacaoQuarto", "IdAdaptacaoNavigation")
                        .WithMany("Quartos")
                        .HasForeignKey("IdAdaptacao")
                        .HasConstraintName("Fk_idAdaptacao");

                    b.HasOne("HotelWebAPI.Model.Filial", "IdFilialQuartoNavigation")
                        .WithMany("Quartos")
                        .HasForeignKey("IdFilialQuarto")
                        .HasConstraintName("Fk_idFilialQuarto");

                    b.HasOne("HotelWebAPI.Model.TipoQuarto", "IdTipoQuartoNavigation")
                        .WithMany("Quartos")
                        .HasForeignKey("IdTipoQuarto")
                        .IsRequired()
                        .HasConstraintName("Fk_idTipoQuarto");

                    b.Navigation("IdAdaptacaoNavigation");

                    b.Navigation("IdFilialQuartoNavigation");

                    b.Navigation("IdTipoQuartoNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Reserva", b =>
                {
                    b.HasOne("HotelWebAPI.Model.Cliente", "IdClienteReservaNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdClienteReserva")
                        .IsRequired()
                        .HasConstraintName("Fk_idClienteReserva");

                    b.HasOne("HotelWebAPI.Model.Funcionario", "IdFuncionarioReservaNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdFuncionarioReserva")
                        .IsRequired()
                        .HasConstraintName("Fk_idFuncionarioReserva");

                    b.Navigation("IdClienteReservaNavigation");

                    b.Navigation("IdFuncionarioReservaNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.ReservaQuarto", b =>
                {
                    b.HasOne("HotelWebAPI.Model.Reserva", "IdReservaNavigation")
                        .WithMany("ReservaQuartos")
                        .HasForeignKey("IdReserva")
                        .HasConstraintName("Fk_idReserva");

                    b.Navigation("IdReservaNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.ValorQuartoFilial", b =>
                {
                    b.HasOne("HotelWebAPI.Model.TipoQuarto", "CodTipoQuartoNavigation")
                        .WithMany("ValorQuartoFilials")
                        .HasForeignKey("CodTipoQuarto")
                        .HasConstraintName("Fk_codTipoQuarto");

                    b.HasOne("HotelWebAPI.Model.Filial", "IdFilialNavigation")
                        .WithMany("ValorQuartoFilials")
                        .HasForeignKey("IdFilial")
                        .HasConstraintName("Fk_idFilial");

                    b.Navigation("CodTipoQuartoNavigation");

                    b.Navigation("IdFilialNavigation");
                });

            modelBuilder.Entity("HotelWebAPI.Model.AdaptacaoQuarto", b =>
                {
                    b.Navigation("Quartos");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Contum", b =>
                {
                    b.Navigation("ItemConta");

                    b.Navigation("ItemLavanderiaConta");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Filial", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("ItemConsumivelFilials");

                    b.Navigation("Quartos");

                    b.Navigation("ValorQuartoFilials");
                });

            modelBuilder.Entity("HotelWebAPI.Model.FormaPagamento", b =>
                {
                    b.Navigation("NotaFiscals");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Funcao", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Funcionario", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("HotelWebAPI.Model.ItemConsumivelFilial", b =>
                {
                    b.Navigation("ItemConta");
                });

            modelBuilder.Entity("HotelWebAPI.Model.NotaFiscal", b =>
                {
                    b.Navigation("Conta");
                });

            modelBuilder.Entity("HotelWebAPI.Model.Reserva", b =>
                {
                    b.Navigation("ReservaQuartos");
                });

            modelBuilder.Entity("HotelWebAPI.Model.ServicoLavanderium", b =>
                {
                    b.Navigation("ItemLavanderiaConta");
                });

            modelBuilder.Entity("HotelWebAPI.Model.TipoQuarto", b =>
                {
                    b.Navigation("Quartos");

                    b.Navigation("ValorQuartoFilials");
                });
#pragma warning restore 612, 618
        }
    }
}
